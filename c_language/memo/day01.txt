* 오리엔테이션

1. 강사: 배정수 강사, doginatas@hanmail.net
2. 수업자료 백업(매일 매일) - 메일, usb
3. 훈련시간 준수!
	-엘레베이터 탑승시간이 몰리기 때문에!
	 미리 와서 출석체크 할 수 있어야 합니다!
4. 수업자료 공유
  1) 스터디룸 이용
      koreastudyroom.com

  2) 웹하드 (미사용)
      - c언어 : visual studio 2015버전 <--- 요거 다운받아서 집에 설치하기!
      - kedudisk.com / it1000, 학생11! 뒤에 느낌표
      - 다운받은 압축파일은 본인의 resource 폴더에 저장하자!
=====================================================
day01
1. 비주얼스튜디오 설치하기
  - 압축해제 -> exe 파일로 설치 진행
  - 계정만들기!!

2. 프로젝트 생성하기
   1)파일
     새로 만들기 -> 프로젝트 -> C++ -> Win32 콘솔 응용 프로그램
     (ctrl+shift+N)
    *콘솔(console)은 모니터와 키보드
    *솔루션: 가장 큰 폴더
               솔루션안에 프로젝트들이 담긴다.
               최소 1개의 응용프로그램 안에는 한개의 솔루션과 1개 이상의 프로젝트 등으로 구성된다.

      빈 프로젝트 클릭
      SDL은 삭제

    2)소스파일 만들기
     오른쪽 클릭 -> 추가 -> 새 항목(ctrl+shitf+A) --> tab tab tab!
     남색의 바탕화면 -> 소스 편집창
     오른쪽 -> 탐색기 창
     하단 -> 출력장
     
     .cpp	-> C++ 확장자
     basicFormat.c -> C 언어 확장자

    3)환경 설정
     (); 세미콜론. "명령문(문장)의 종결"

     -컴파일 에러 -> 프로그램 툴이 실시간으로 에러를 발견해서 빨간색 밑줄로 표시해 줌!
     (마우스를  hover 시켜서 에러 내용을 볼 수 있음)

     -글꼴 설정
      consolas 
      (네이버 나눔고딕코딩)
     -도구 -> 옵션 -> 텍스트 편집기 -> C/C++ -> 자동 줄 바꿈(클릭!)
      ->줄 번호 클릭되어있는지 확인!

      도구 -> 옵션 -> 환경 -> 글꼴 및 색 -> consolas -> 확인

      -실행해 보기!!!
        실행 단축키 : ctrl + F5



3. 주석 (comment)
    소스 코드를 설명하는 녹색 글
    소스가 길어질 수록, 주석으로 설명을 달아 놓으면, 소스 분석이 쉬워진다!
    주석을 달때 사요ㅕㅇ하는 특수 문자 ://,/* ~ */
    1) // : 한 줄 주석, 그 줄에 있는 모든 소스를 녹색으로 만든다.
    2) /* ~~ */ : 블럭 주석: 몇줄에 걸쳐서 또는 한 단어만.. 특정 부분의
                    내용을 녹색글(주석)으로 만들때 사용한다.

    ※ 자바에서는 /** ~~ */ html용 주석도 있다~ C에는 없음!

    3) 우리는 소스에 설명글을 달아서 학습용으로 주석을 계속 사용할 예정이다.


4. 기본 프로그램 구조
   예제 : basicFormat.c

	1)헤더 파일
	  #으로 시작하는 문장
    	  보통 소스코드의 가장 맨 윗줄에 등장한다.
	  선행처리기, 전처리기 등의 이름으로도 불린다.
	
              바디를 실행하기전에 미리 무엇인가를 가져다가 쓴다.

	2) body 부
	  헤더파일을 제외한 실제 수행할 소스가 작성되는 부분
	

	3) 각 줄에 해당하는 명령문 (구문 분석하기)
	   #include<stdio.h>
	   // # : 전처리명령을 뜻하는 특수문자 pre-complied
	   //include : 포함하다. 파란색 단어
		* 파란색 단어는 명령어 임!
		  명령조로 해석 ~~해라!
		* 이렇게 파란색으로 표시되는 단어들은 미리 소스파일에서 약속된
		  단어들이다. 이런 단어를 "키워드" 라고 하자!

		   파란색 단어 == 키워드

	   // < > : 꺽쇠
		  헤더파일(~~.h로 끝나는 파일)
		  을 표시하는 특수문자

	   // 헤더파일을 표시할 때, 종종 "" 쌍따옴표로 묶일 대가 있는데,

	      <>는 표준 위치의 헤더파일
	       "" 는 특정위치(경로)에 있는 헤더파일을 표시할 때 사용한다.

	      예) #include "c\문서\myHeader.h"
	          #include <string.h>
	          #include <myKoreaItAcademy.h>
		2015가 설치되면서 헤더폴더 모음집에 
                        내가 만든 헤더파일 만든것을 넣어두면 사용할 수 있다.

	  // stdio.h
	         std : standard  vywns
	         i : input  장치 (키보드) 비표준: 마우스, 바코드
	        o : output 장치 (모니터)
	
	  // .h : 헤더파일에 붙는 확장

	  -  body  부
	  // void : 값이 없다는 뜻의 "무치형" 자료형
		 함수의 리턴타입으로 자주 사용됨
		* 함수의 리턴타입은 함수시간에 별도로 설명

	  // main : 이 전체 소스코드의 시작점이야~!!!!!!
	              또는, 이 프로젝트의 시작점이야~!!!
		  라고 설명하는 상징기호!
		  프로젝트 내부에서 단 한개만 있어야함

	  // () : 소괄호
	   ※ [] 대괄호 = 배열
                  {} 중괄호 = "블럭" 구역을 구분해 준다

	     소괄호 () : 함수에서 사용
	 	영어단어 뒤어 소괄호가 나오면 무조건 함수
		main() <---- 뭐라고 불러야 하죠???? 메인 함수

		단, 키워드 뒤에 ()가 붙을 땐, 명령문이다.
		예) for(), while(), if().... for문, while문, if문으로 읽는다
	  // {  } : 블럭 : 함수의 body 부

	    void main() <----- 메인 함수야!!!
                { <----여기서

		printf("이제부터 C언어");

	    }   <---- 메인함수의 body 부야!
	        <-----여기까지 main 함수 영역이구나!!

	  // printf( );  <--- 출력문으로~~~


5. 출력문+서식문자 연습

	소스파일 생성해보기 : printTest.c
	헤더부 메인함수 만들어서 준비하기!

	printf() <---프린트 f 함수
	          : 모니터에 메세지를 출력할 때 사용하는 기능(==함수)
		소괄호 안에 ""쌍따옴표를 이용해서
		출력하고자 하는 내용을 작성

	printf("나는 백성민 입니다");

	printf("나는 역삼동에 있습니다");

	printf("지금은 14시 입니다");

***
printTest.obj : error LNK2005: _main이(가) basicFormat.obj에 이미 정의되어 있습니다.
***
D:\GB_0900_05_BSM\c_language\workspace\day01\Debug\basicFormat.exe : fatal error LNK1169: 여러 번 정의된 기호가 있습니다.

조치방법 : 빌드에서 "잠깐" 제외 시키기
  소스파일 -> 속성 -> 빌드에서 제외: 예

(ctrl + shift + S --> 소스파일 다 한꺼번에 저장 단축키)

	1) 제어문자 (escape sequence)
	   역슬래시와 알파벳 한글자로 구성된 제어문자
	   종류 : \a \n \r \t ...
		\a : 경고음 발생(삐~)
		\n : new line 의 약자(한줄 띄우기)
		\r : 커서를  리턴시키기
		\t :  tab 간격만큼 사이 벌리기
		\" ~ \" : 따옴표안에 따옴표 처리방법

	2) 형식지정자 (=서식문자)
	    숫자(정수, 실수)
	    문자(홑따옴표로 표시는 한글자)
	    문자열(쌍따옴표 안에 오는 내용)

	    등을 printf() 함수에서 사용하고자 할 때
	    사용하는 특수문자

	    종류: %d, %f, %c, %s ... (종류가 많음)

	    사용방법
	    printf(" 형식지정자 ", 인수1, 인수2....);

	    printf(" %d \n", 10);
	    printf(" %d %d \n", 20, 30);
==========================================================
내일,
서식문자 활용부터


6. 자료형 변수

7. 입력하기





