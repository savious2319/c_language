day14

이차원 배열 + 포인터 변수
	
* int **p = int ar[3][4]

        p = ar
-------------------------------------------------------------------------------------

   int ar[3] [2]  [5] 
          면  행  열

   1)포인터 배열 : 포인터를 저장하고 있는 배열
                      배열 3칸이 있는데 그 안에 포인터들이 저장된대~

   int *ar[3] -> ar은 포인터일까? 배열일까? 
	      해답은 연산자 우선순위로 해석할 수 있는데,
	      * 하고 []하고 []가 더 높다!
	      그래서 ar은 배열이다!
	      ar
            [           ]  [        ]  [        ]  <-    배열 구조인데?
	[ 주소    ]  [  주소]  [  주소 ] <--- "주소"를 저장하는 배열이구나!!   

	ar[0] = (int *)malloc(n * sizeof(int));
	ar[1] = (int *)malloc(n * sizeof(int));
	ar[2] = (int *)malloc(n * sizeof(int)); 

   2)배열 포인터 : 배열을 가리키고 있는 포인터
   int(*pAr)[4] -> (* ) > []보다 더 높다 그래서 정체는 포인터다!!
	4는 한 행의 칸수를 의미한다.
	pAr + 1 하면 (4칸으로 이동)
	1차원 배열에서는 절대로 쓸 수 없다. 다차원 배열에서만 쓸 수 있다.

내일
5.26 -> array10.c 완성해서 제출하기
        (팀작업)array10_test_윤순호_박진영_백성민.c (문제1, 문제2, 문제3)


