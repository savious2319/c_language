day13

-배열 특징
  1. 배열명은 포인터 상수 -> 포인터변수 = 배열명;  int *pTr = arNum;
  2. 배열의 끝은 모르겠다 = 컴파일러는 점검하지 않는다.
	함수에 배열을 던질 때(인자), 포인터 변수(매개변수)로 받아야 하는데
	받드시 갯수(칸)을 같이 알려줘야 한다.
		fct(배열, size)
		fct(arNum, size) <--- fct(sieze, arNum) 호출

		void fct(int *pNum, int length) 선언부

  3. 타입 : 정의 (동일한 타입)의 (연속적인) 집합

-배열 선언 호출 초기화
	int arNum;
	int arNum[3];
	arNum[0] = 10; arNum[1] = 20; arNum[2] = 30;

	%d, arNum[0]); 10이 출력되는데, "arNum[0]"을 변수라고 부를 수 있다.

	scanf(%d",arNum); 에러! -> 오류! 왜?
		arNum 하면 주소니까 더군다나 (int *, int로 읽는 구조)
		arNum에 어딘가에(몇번째 방인지)알려줘야 하기 때문에...

	scanf("%d",arNum+0); == scanf("%d", &arNum[0]); arNum[0]는 변수다. 그 앞에 &(주소 구해)
	scanf("%d",arNum+1); == scanf("%d", &arNum[1]);
	scanf("%d",arNum+2); == scanf("%d", &arNum[2]);

-일괄처리 (size, length = 배열의 칸수)
	int 배열칸수 = sizeof(arNum) / sizeof(arNum[0]);

-문제풀이 1-2-3
============================================================================
6. 배열과 포인터
	배열명은 포인터상수!
	포인터 변수 = 배열명;
	day13
	arrayTest2
	array04.c

	array06.c. 소스 제출!!!!!!

7. 매개변수 전달


8. 이차원 배열
	배열 선언시 첨자의 갯수로 차원을 표현한다.

	int arNum[3]; //1차원 배열
	int arNum[3][4]; //2차원 배열
	int arNum[][][][]; //4차원 배열

	메모리가 허용하는 한 차원수를 무한대로 만들 수 있다.
	그런데, 실제로는 4차원배열 이상은 잘 안쓰게 된다!

	1. 어렵다 (구조가 어려워진다)
	2. 불필요 메모리가 낭비된다.

   이차원 배열
	행, 열

    int ar [3][4] ; 3행 4열짜리 배열 (행=줄, 열=칸)
			        층,     호

	1층에 1호 -> 101 호 -> 행과 열로 치환 (0행, 0열)
	2층에 1호 -> 201 호 -> 	            (1행, 0열)

     ar 아파트 마지막층에 마지막 방 3층4호(304호) -> 2행 3열

	205호 --> 1행 4열
	----------------------
	마지막 방번호가 508호

	배열을 선언해 보세요 무궁화아파트
	int 무궁화아파트 [5][8];	

	배열에서 마지막방을 불러보세요 508호를 가르키세요~
	무궁화아파트 [4][7];
	------------------------------------

	무궁화초등학교
	각 반마다 30명씩 있다.
	총 반은 3개반 있다.
	

	//1차원 배열로 구조를 짜보세요
	int arScore1[30] = {0};
	int arScore2[30];	
	int arScore3[30];

	getTotal(arScore1, arScore2, arScore3);

	//2차원 배열로 구조를 짜보세요
	           반   명(점수갯수)	
	int arBan[3]  [30];
	getTotal(3, 30, arBan);
	   3반이 있고, 30명씩 있는데, arBan 이라는 곳에 데이터들이 모여있어~

	void getTotal(int banSize, int scoreSize, int **arBan){

	}
	void getTotal(int banSize, int scoreSize, int *arBan[]){

	}

  다차원 : int ar[3][4][5]; 	3면 4행 5열
	int ar[2][3][4][5]; 	2의 3면 4행 5열


	int ar[6]; //우리 학교 6반 있어
	int ar[2][3]; // 우리 학교 2개 있는데 3반이 있어

  2차원 배열에서 행과 열이 갖는 의미

	int arNum[3][5];

	3개의 줄이 있는데
	각 줄마다 5칸씩 있다!

	=> 5칸 짜리 배열이 3개 있다!

	int arNum [3][5] = 
	{
	{0,0,0,0,0} arNum[0] 총 20byte  ->아직 주소야(부분 배열)
	{1,1,1,1,1} arNum[1] 총 20byte
	{2,2,2,2,2} arNum[2] 총 20byte
	};

	요소를 볼려면 arNum[0][0] --> (전체)주소 -> (부분)주소 -> 데이터까지 접근했다 
	%d, arNum[0][0]); 실제 값을 읽을 수 있다.
	%d, arNum); <--만약 100번지라면
	%d, arNum[0]); <-- 얘도 100번지이다.
	%d, &arNum[0][0]); <-- 얘도 100번지이다.

	%dbyte, sizeof(arNum));
	%dbyte, sizeof(arNum[0]));
	%dbyte, sizeof(arNum[0][0]));






