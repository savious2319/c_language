day19

- 코드 리뷰 : day18_struct_13.c

- 구조체
  1. 링크드 리스트
  2. 더블 링크드 리스트(double linked list)
     struct Type{
	정보(멤버변수)  ...  나이, 이름, 신상....

	//heap 노드를 구성해서 노드끼리 연결할거다!
	//노드간 연결점이 필요한데...
	//이전을 가리키는 포인터변수   Type *prev;
	//다음 가리키는  포인변수       Type *next;
     };

   2-1. 데이터 구조화시,
	노드에 끝을 알리기 위해서 NULL 종점을 알려준다.

	searching -> 다음 노드, 이전 노드의 포인터를 검색한다.
		while(search){
		       search 는 NULL(=0)을 만날때 까지 계속 돈다!

		}

  struct14_2.c 제출

  3. 얕은 복사 vs 깊은 복사
	얕은 복사(shallow copy) : 동적 메모리의 주소만 가져와서 복사를 하게 된다.
			       동적 메모리 한 곳만 쓰기 때문에
			       복사할 때 free()를 두번 지우게 되면, 한 주소를 두번 소멸하는 결과가 되어
			       안정적으로 프로그램을 진행할 수 없게 된다.


	깊은 복사(deep copy) : 복사하고자 하는 구조체의 멤버변수도 동일한 크기로 동적 할당을 받은 후,
			    값을 대입시킨다. 
			    두 구조체는 각각 동적할당을 받은 상태라
			    지울 때, 다른 메모리 공간을 지우게 되어 안정적으로 프로그램을 종료시킬 수 있다.
	
			    (문자열 복사에서 종종 오류가 발생된다)

※ 열거형, 공용체 : 구조체의 파생형 타입

C언어 종료!

==============================================================================

자바!!!







































