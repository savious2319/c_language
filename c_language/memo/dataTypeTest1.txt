#include<stdio.h>

void main()
{
	//정수형 변수 3개 선언하기

	//정수형 변수 3개를 합한 값 출력하기
	//예) 5+3+4=??

	int a, b, c;			//처음 선언할 때 값을 입력하지 않았다.
	a = 10, b = 20, c = 30;
	printf("%d+%d+%d=%d\n", a, b, c, a+b+c);

	int a1 = 40, b1 = 50, c1 = 60;	//선언 초기부터 값을 넣어놓고 시작했다.
	printf("%d+%d+%d=%d\n", a1, b1, c1, a1+b1+c1);

	//초기화 : 프로그램의 로직에러를 방지하기 위해 변수 선언시 처음 입력 하는 데이터
	//변수를 선언하고(자료형 + 영어단어) 값을 처음에 대입하는 것
	int d = 0;				//초기화를 하지 않았다 (변수만 선언하고 값을 넣지 않았다)
	printf("초기화 : %d\n", d);	//그럼 어떤 데이터가 들어있을까?  쓰레기값
	// 디폴트 초기값
	// 정수형 변수 = 0
	// 문자형 변수 = '\0'	하지만,, 널문자보다는 공백으로 쓰는 걸 추천    ' '
	// 실수형 변수 = 0.0
	// 문자열(배열) = "\0"   문자열 저장소 = "";

	// 국어, 영어, 수학
	// 80,   56,   95   <-- 총합과 평균 출력해 보기! 평균은 소수점 한자리까지!
	//											    (평균은 잘 구해지지 않는다, 왜?)

	// 국어, 영어, 수학 변수 선언부
	int kScore = 10, eScore = 10, mScore = 14;

	// 출력 및 연산

	printf("국어:%d점, 영어:%d점, 수학:%d점. 총점:%d점, 평균:%.1f점\n", kScore, eScore, mScore,
		kScore + eScore + mScore, (kScore + eScore + mScore) / 3.0);
	//평균값 출력할 때... 정수끼리 연산을 하면 결과값은 정수가 나온다.
					    //그래서, %f 라는 서식문자로 결과값을 출력하면 오류값이 나온다.
	//	    따라서, 정수끼리 연산을 할 때, 값 하나를 실수로 만들면, 결과값이 실수로 나오기 때문에
	//	    항(operand) 하나를 실수로 만든 후, %f로 출력하자!
	//		정수+정수-정수*정수 -> 결과값 정수
	//		정수+정수/정수*실수 -> 결과값 실수
	//** 수식에 타입이 다른 하나가 있을 때, 큰 타입으로 결과값이 바뀌게 되는 데,
	//	이런 현상을 "중요 -> 자동 형변환" 이라고 한다

	// 'a' -32 -> 결과값은 어떤 타입일까요? 정수형 65 라는 데이터를 %c로 출력한 'A'
	//															 %d로 출력하면 65
	//	문자 'a'가 32랑 연산하기 위해서...
	//	정수형 97로 자동으로 타입이 메모리에서 바뀌게 된다! <-- "자동 형변환"


	// 변수에는 데이터를 기억하기 쉬운 이름으로 지어주자!
	//** (변수,함수) 이름짓기
	//1. 변수는 될수있으면 짧게,
	// 함수는 동사형으로 의미를 파악할 수 있게 (너무 길면 안좋다)
	//	setPositionPoint()
	//	printName()
	//	getAverageScore() 등등
	//2. 소문자로 시작 <--- 약속 에러는 안나지만, 소문자로 시작하자!
	//3. 숫자가 맨 앞에 나오면 에러!
	//4. 특수문자를 쓰면 에러(공백 써도 에러) 단, _은 사용할 수 있음
	//	_age, int _back;  가능
	//5. 단어와 단어가 만날 때, 가독성을 높이기 위한 표기방법
	//	int schoolage; <-- 보기 어려움
	//	int schoolAge; <-- 단어가 결합될때, 대문자로 표기(카멜 표기법)
	//	int school_age; <-- 밑줄로 구분, 파스칼 표기법
	//	여기서는 카멜 표기법 추천!
	//  mathScore, mScore 등등./...
	//	솔루션, 프로젝트, 소스파일등도 카멜 표기법을 사용했다.
	//	폴더를 만들 때는 파스칼 표기법을 사용했었다  GB_05_0900_BSM
	//  단, 취업된 회사에서 사용하는 작명 규칙이 있다면, 그 규칙을 따라야 한다!

	//		변수 앞에 접두사를 붙여서 표기하는 방법도 있다(헝가리안 표기법)
	//		pAge, 여기서 p는 보통 pointer (위치값, 주소, 포인터) 를 의미한다.
	//		arScore, 여기서 ar은 배열(array)를 뜻한다.
	//		sMath, sEng, sKor,   s는 아마도 score를 의미하는 걸 거 같다
	//		strName, strPage, strStorage, 여기서 str은 문자열 string을 의미하는 걸거다
	//6. 키워드를 변수나 함수이름으로 사용할 수 없다!



}